jobs:
  - job: ubuntu1604
    displayName: Ubuntu 16.04 Build
    timeoutInMinutes: 0
    pool:
      vmImage: 'Ubuntu 16.04'
    strategy:
      matrix:
        Python27:
          python.version: '2.7'
        Python35:
          python.version: '3.5'
        Python36:
          python.version: '3.6'
        Python37:
          python.version: '3.7'
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '$(python.version)'
          architecture: 'x64'
      - script: |
          sudo apt-get install openni2-utils
          # 14.04
          # sudo add-apt-repository ppa:v-launchpad-jochen-sprickerhof-de/pcl -y
          # sudo apt-get update -y
          # sudo apt-get install libpcl-all -y
          # 16.04(https://qiita.com/TEWi_R/items/941acb2af690f8f184a1)
          sudo apt install git build-essential linux-libc-dev cmake cmake-gui libusb-1.0-0-dev libusb-dev libudev-dev mpi-default-dev openmpi-bin openmpi-common libflann1.8 libflann-dev libeigen3-dev libboost-all-dev libqhull* libgtest-dev freeglut3-dev pkg-config libxmu-dev libxi-dev mono-complete qt-sdk openjdk-8-jdk openjdk-8-jre libproj-dev libglfw3-dev -y
          sudo apt install libpcl-dev -y
          python -m pip install --upgrade pip && pip install -r requirements.txt
          pip install setuptools
        displayName: 'Install Dependencies'
      - script: |
          python setup.py build_ext -i
          python setup.py install
        displayName: 'Build Library'
      - script: nosetests
        displayName: 'Run Unit Tests'
  - job: osx
    displayName: macOS High Sierra
    timeoutInMinutes: 0
    pool:
      vmImage: 'macOS-10.13'
    strategy:
      matrix:
        Python27:
          python.version: '2.7'
        Python35:
          python.version: '3.5'
        Python36:
          python.version: '3.6'
        Python37:
          python.version: '3.7'
    steps:
      - script: |
          brew install pkg-config
          brew install pcl
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install setuptools
        displayName: 'Install Dependencies'
      - script: |
          python setup.py build_ext -i
          python setup.py install
        displayName: 'Build Library'
      - script: nosetests
        displayName: 'Run Unit Tests'
  - job: vs2017
    displayName: Windows VS2017 Build
    timeoutInMinutes: 0
    pool:
      vmImage: 'vs2017-win2016'
    strategy:
      matrix:
        x86:
          PLATFORM: 'x86'
          ARCHITECTURE: 'x86'
          GENERATOR: 'Visual Studio 15 2017'
          PCL_ROOT: 'C:\Program Files (x86)\PCL 1.9.1'
          OPENNI_ROOT: '%ProgramFiles(x86)%\OpenNI2\Redist\'
        x64:
          PLATFORM: 'x64'
          ARCHITECTURE: 'x86_amd64'
          GENERATOR: 'Visual Studio 15 2017 Win64'
          PCL_ROOT: 'C:\Program Files\PCL 1.9.1'
          OPENNI_ROOT: 'C:\Program Files\OpenNI2\Redist\'
    variables:
      # BUILD_DIR: '$(Agent.WorkFolder)\build'
      # VCPKG_DIR: '$(Agent.WorkFolder)\vcpkg'
      VCVARSALL: '%ProgramFiles(x86)%\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvarsall.bat'
      CONFIGURATION: 'Release'
      PCL_VERSION: "1.9"
      OPENNI_VERSION: "2.2"
      NOSEATTR: "not pcl_ver_0_4"
    steps:
      # - script: |
      #     git clone https://github.com/microsoft/vcpkg --depth 1 %VCPKG_DIR%
      #     echo.set(VCPKG_BUILD_TYPE release)>> %VCPKG_DIR%\triplets\%PLATFORM%-windows.cmake
      #     %VCPKG_DIR%\bootstrap-vcpkg.bat
      #     %VCPKG_DIR%\vcpkg.exe version
      #   displayName: 'Bootstrap vcpkg'
      # - script: |
      #     # %VCPKG_DIR%\vcpkg.exe install hogefuga
      #     %VCPKG_DIR%\vcpkg.exe list
      #     pip install -r requirements.txt
      #   displayName: 'Install Dependencies'
      # - script: |
      #     rmdir %VCPKG_DIR%\downloads /S /Q
      #     rmdir %VCPKG_DIR%\packages /S /Q
      #   displayName: 'Free up space'
      - script: |
          SET PATH=%PCL_ROOT%\\bin;%PCL_ROOT%\\3rdParty\\VTK\\bin;%OPENNI_ROOT%;%PATH%
          powershell -NoProfile -ExecutionPolicy Unrestricted .\appveyor\install.ps1
          pushd pkg-config
          powershell -NoProfile -ExecutionPolicy Unrestricted .\Install-GTKPlus.ps1
          popd
          python -m pip install --upgrade pip && pip install -r requirements.txt
          pip install setuptools
        displayName: 'Install Dependencies'
      - script: |
          python setup.py build_ext -i
          python setup.py install
        displayName: 'Build Library'
      - script: nosetests
        displayName: 'Run Unit Tests'
