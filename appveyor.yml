os:
- Windows Server 2012 R2

environment:
  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\appveyor\\run_with_env.cmd"

  # https://www.appveyor.com/docs/build-environment/#miniconda
  matrix:
  - PYTHON: "C:\\Miniconda34-x64"
    PYTHON_VERSION: "3.4"
    PYTHON_ARCH: "64"
    PCL_ROOT: "C:\\Program Files\\PCL 1.6.0"
    PCL_VERSION: "1.6"
    OPENNI_VERSION: "1.3.2"
    OPENNI_ROOT: "C:\\Program Files\\OpenNI\\Bin64"
    APPVEYOR_OPENNI_ROOT: ".\\AppVeyor\\OpenNI\\x64\\Bin64"
    NOSEATTR: "not pcl_ver_0_4 and not pcl_over_17 and not pcl_over_18"

  - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
    PYTHON: "C:\\Miniconda35-x64"
    PYTHON_VERSION: "3.5"
    PYTHON_ARCH: "64"
    PCL_ROOT: "C:\\Program Files\\PCL 1.8.1"
    PCL_VERSION: "1.8"
    OPENNI_VERSION: "2.2"
    OPENNI_ROOT: "C:\\Program Files\\OpenNI2\\Redist\\"
    APPVEYOR_OPENNI_ROOT: ".\\AppVeyor\\OpenNI2\\x64\\Redist"
    NOSEATTR: "not pcl_ver_0_4"

  - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
    PYTHON: "C:\\Miniconda36-x64"
    PYTHON_VERSION: "3.6"
    PYTHON_ARCH: "64"
    PCL_ROOT: "C:\\Program Files\\PCL 1.8.1"
    PCL_VERSION: "1.8"
    OPENNI_VERSION: "2.2"
    OPENNI_ROOT: "C:\\Program Files\\OpenNI2\\Redist\\"
    APPVEYOR_OPENNI_ROOT: ".\\AppVeyor\\OpenNI2\\x64\\Redist"
    NOSEATTR: "not pcl_ver_0_4"

install:
  # If there is a newer build queued for the same PR, cancel this one.
  # The AppVeyor 'rollout builds' option is supposed to serve the same
  # purpose but it is problematic because it tends to cancel builds pushed
  # directly to master instead of just PR builds (or the converse).
  # credits: JuliaLang developers.
  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
        https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
        Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
          throw "There are newer queued builds for this pull request, failing early." }

  # Python(set before conda command call)
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PYTHON%\\Library\\bin;%PYTHON%\\Lib\\site-packages;%PATH%;"

  # Install the build dependencies of the project. If some dependencies contain
  # compiled extensions and are not provided as pre-built wheel packages,
  # pip will build them from source using the MSVC compiler matching the
  # target Python version and architecture
  # - "%CMD_IN_ENV% python -m pip install -r dev-requirements.txt"
  # - "pip install wheel"
  # - if [%PCL_VERSION%]==[1.6] anaconda search -t conda vc 10.*
  # - if [%PCL_VERSION%]==[1.6] conda install -y -q anaconda-client
  # - if [%PCL_VERSION%]==[1.6] SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PYTHON%\\Library\\bin;%PYTHON%\\Lib\\site-packages;%PATH%
  - "conda install -y -q wheel"

  # Mini-conda ng
  # - "pip install --upgrade setuptools"
  # - conda install -y -q setuptools
  # use Visual Studio 2017?(over 34.4.0.)
  # under 36.2.2
  - conda install -y -q setuptools
  # - "pip install --disable-pip-version-check --user --upgrade pip"

  # PCL 
  - "SET PATH=%PCL_ROOT%\\bin;%PCL_ROOT%\\3rdParty\\VTK\\bin;%OPENNI_ROOT%;%PATH%;"

  # PCL Install
  - ps : appveyor\install.ps1

  # pkg-config Download
  - cd pkg-config
  - ps : .\Install-GTKPlus.ps1
  - cd ..

build_script:
  - if [%PCL_VERSION%]==[1.6] copy .\\appveyor\\bfgs.h "%PCL_ROOT%\include\pcl-%PCL_VERSION%\pcl\registration\bfgs.h"
  - if [%PCL_VERSION%]==[1.6] copy .\\appveyor\\eigen.h "%PCL_ROOT%\include\pcl-%PCL_VERSION%\pcl\registration\eigen.h"
  
  # conda 
  - conda install -y -q Cython=0.25.2
  - conda install -y -q numpy

  - python setup.py build_ext -i
  - python setup.py install
  - python setup.py bdist_wheel
  - python -m pip list

  - if [%PCL_VERSION%]==[1.6] copy "%APPVEYOR_OPENNI_ROOT%" .
  - if [%PCL_VERSION%]==[1.6] copy "%APPVEYOR_OPENNI_ROOT%" "%PYTHON%"
  - if [%PCL_VERSION%]==[1.6] copy "%APPVEYOR_OPENNI_ROOT%" "%PYTHON%\DLLs"
  - if [%PCL_VERSION%]==[1.6] copy "%APPVEYOR_OPENNI_ROOT%" "%PYTHON%\Lib\site-packages"

test_script:
  # - python tests\test_pcl.py
  # - python tests\test_registration.py
  - nosetests -A "%NOSEATTR%" --verbose

  # - python examples\official\Filtering\PassThroughFilter.py
  # - python examples\official\Filtering\project_inliers.py
  # - python examples\official\Filtering\remove_outliers.py -r Radius
  # # MemoryLeak?
  # - python examples\official\Filtering\remove_outliers.py -r Condition
  # - python examples\official\Filtering\VoxelGrid_160.py
  # - python examples\official\Filtering\statistical_removal.py
  # - python examples\official\IO\pcd_read.py
  # # KdTree
  # - python examples\official\kdtree\kdtree_search.py
  # # keypoints
  # # NG(RangeImage Link Error)
  # # - python examples\official\keypoints\narf_keypoint_extraction.py
  # # octree
  # execute NG
  # Exception ignored in: 'pcl._pcl.to_point_t'
  # TypeError: a float is required
  # - python examples\official\octree\octree_search.py
  # - python examples\official\Segmentation\cluster_extraction.py
  # - python examples\official\Segmentation\cylinder_segmentation.py
  # - python examples\official\surface\concave_hull_2d.py
  # - python examples\official\surface\resampling.py
  
after_test:
  # If tests are successful, create binary packages for the project.
  - "%CMD_IN_ENV% python setup.py bdist_wheel"
  - "%CMD_IN_ENV% python setup.py bdist_wininst"
  - "%CMD_IN_ENV% python setup.py bdist_msi"
  - ps: "ls dist"

artifacts:
  # Archive the generated packages in the ci.appveyor.com build report.
- path: dist\*

